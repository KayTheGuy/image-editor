import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class MainWindow extends JPanel implements ActionListener {
	private JFrame mainFrame;
	private JPanel mainPanel;
	private JButton openButton;
	private JFileChooser fc;

	public MainWindow() {
		mainFrame = new JFrame("Image Editor");
		mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		mainFrame.setSize(800, 600);
		mainFrame.setLocationRelativeTo(null);
	    mainFrame.setLayout(new FlowLayout());
		mainFrame.setVisible(true);

		mainPanel = new JPanel(new GridLayout(70, 50));
		mainFrame.add(mainPanel);
		
		makeMainPanel();
	}
	
	private void makeMainPanel(){
		mainPanel.removeAll();
		
		fc = new JFileChooser();
		openButton = new JButton("Select Image");
		openButton.setForeground(Color.MAGENTA);
		openButton.addActionListener(this);
		//SELECT IMAGE
		openButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				mainPanel.setVisible(false);
			}
		});
		mainPanel.add(openButton);
		
		//CHOOSE and SET COMMAND FILE
		JButton fileButton2 = new JButton("Open File");
		fileButton2.setForeground(Color.MAGENTA);
		fileButton2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				scssflWriteLabel.setVisible(false);
				inputErrorLabel.setVisible(false);
				mainPanel.setVisible(false);
				beforeOpenLabel.setVisible(false);
				openFilePanel.setVisible(true);
			}
		});
		mainPanel.add(fileButton2);
		
		//MAKE NEW COMMAND BUTTON
		newButton = new JButton("Make New Command");
		newButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				mainPanel.setVisible(false);
				scssflWriteLabel.setVisible(false);
				inputErrorLabel.setVisible(false);
				beforeOpenLabel.setVisible(false);
				chooseCommandTypePanel.setVisible(true);
			}
		});
		newButton.setVisible(false);
		mainPanel.add(newButton);
				
		//EDIT COMMAND BUTTON
		editButton = new JButton("Edit Command");
		editButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				mainPanel.setVisible(false);
				scssflWriteLabel.setVisible(false);
				beforeOpenLabel.setVisible(false);
				inputErrorLabel.setVisible(false);
				//update the command list
				listModel.clear();
				for (String cmd : cm.getAllCommands()) {
					listModel.addElement(cmd);
				}
				selectCommandPanel.setVisible(true);
			}
		});
		editButton.setVisible(false);
		mainPanel.add(editButton);
				
		//Write changes to file button
		wrToFile.setVisible(false);
		wrToFile.setForeground(Color.RED);
		wrToFile.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				cm.applyChanges();
				scssflWriteLabel.setVisible(true);
				unsavedLabel.setVisible(false);
				beforeOpenLabel.setVisible(false);
				wrToFile.setVisible(false);
			}
		});
		mainPanel.add(wrToFile);
		unsavedLabel.setForeground(Color.RED);
		unsavedLabel.setVisible(false);
		scssflWriteLabel.setForeground(Color.BLUE);
		scssflWriteLabel.setVisible(false);
		inputErrorLabel.setForeground(Color.RED);
		inputErrorLabel.setVisible(false);
		fileFormatError.setForeground(Color.RED);
		fileFormatError.setVisible(false);
		beforeOpenLabel.setForeground(Color.RED);
		beforeOpenLabel.setVisible(false);
		mainPanel.add(unsavedLabel);
		mainPanel.add(fileFormatError);
		mainPanel.add(scssflWriteLabel);
		mainPanel.add(inputErrorLabel);
		mainPanel.add(beforeOpenLabel);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
}
